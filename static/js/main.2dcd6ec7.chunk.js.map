{"version":3,"sources":["files sync /.json$","files/small sync nonrecursive /.json$","files/medium sync nonrecursive /.json$","files/big sync nonrecursive /.json$","Size/Size.js","List/List.js","Panel/Panel.js","Num/NumTop.js","Num/NumLeft.js","Cross/Cross.js","Grid/Grid.js","Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["map","./medium/00-мишка.json","./small/00-смайл.json","./small/01-дельфин.json","./small/02-кораблик.json","./small/03-слоник.json","./small/04-лось.json","./small/05-кошка.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","./00-смайл.json","./01-дельфин.json","./02-кораблик.json","./03-слоник.json","./04-лось.json","./05-кошка.json","./00-мишка.json","webpackEmptyContext","importFilesCross","r","Size","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","state","count","setAppState","context","methods","document","querySelectorAll","forEach","item","i","classList","remove","currentTarget","add","listFilesSelectedSize","getAttribute","require","selectedSize","selectedCross","selectedCrossName","selectedCrossData","numTop","numLeft","crossList","newthis","list","size","react_default","a","createElement","key","data-name","systemName","className","onClick","name","title","countCrossAll","countCrossSmall","countCrossMedium","countCrossBig","setState","length","Component","List","small","medium","big","crossType","type","crossListId","crossId","arr","row","index","value","j","selectedType","selectedCrossId","localStorage","getItem","JSON","parse","selectedCrossTime","newarrRow","newarrValues","push","printNumLeft","newArrRow","newArrValues","parseInt","printNumTop","_this2","data-id-cross","data-type-cross","replace","width","height","class","style","Panel","openSettings","startAgain","modal","removeItem","h","m","s","selectedCrossChange","clearInterval","selectedCrossTimerId","progress","String","padStart","NumTop","col","addEventListener","colId","NumLeft","rowId","timer","totalCrossSeconds","Cross","clickCell","clickSave","clickStartTimer","setInterval","newSeconds","Math","floor","hours","minutes","setItem","stringify","btnDraw","setAttribute","btnEmpty","btnClean","removeAttribute","selectedCrossDataNew","rowIndexCross","parentNode","colIndexCross","Array","prototype","equals","array","l","defineProperty","enumerable","tempMiniArr","countTrue","rowNew","result","querySelector","setTimeout","data-index","cell","data-type","num","colItem","guideLinesMouseEnter","guideLinesMouseLeave","Grid","clickDraw","clickEmpty","clickClean","NumTop_NumTop","NumLeft_NumLeft","Cross_Cross_Cross","clickDrawQuick","Settings","clickClose","clickGuideLines","clickHideNames","clickQuickDraw","settingGuideLines","settingQuickDraw","settingHideNames","refs","checked","btnDrawQuick","ref","htmlFor","onChange","defaultChecked","Context","React","createContext","initialState","App","objectSpread","returnBackList","newState","Provider","Consumer","Panel_Panel_Panel","Size_Size_Size","List_List_List","Grid_Grid_Grid","Settings_Settings_Settings","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dcd6ec7.chunk.js","sourcesContent":["var map = {\n\t\"./medium/00-мишка.json\": 13,\n\t\"./small/00-смайл.json\": 14,\n\t\"./small/01-дельфин.json\": 15,\n\t\"./small/02-кораблик.json\": 16,\n\t\"./small/03-слоник.json\": 17,\n\t\"./small/04-лось.json\": 18,\n\t\"./small/05-кошка.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;","var map = {\n\t\"./00-смайл.json\": 14,\n\t\"./01-дельфин.json\": 15,\n\t\"./02-кораблик.json\": 16,\n\t\"./03-слоник.json\": 17,\n\t\"./04-лось.json\": 18,\n\t\"./05-кошка.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;","var map = {\n\t\"./00-мишка.json\": 13\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 10;","import React, { Component } from 'react';\r\nimport './Size.css';\r\n\r\nfunction importFilesCross(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nexport default class Size extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.click = this.click.bind(this);\r\n        this.state = {\r\n            count: []\r\n        }\r\n    }\r\n\r\n    click(e){\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        document.querySelectorAll('.size__item').forEach(function(item, i) {\r\n            item.classList.remove('active')\r\n        });\r\n        e.currentTarget.classList.add('active');\r\n        let listFilesSelectedSize = '';\r\n        switch ( e.currentTarget.getAttribute('data-name') ) {\r\n            case 'all':\r\n                listFilesSelectedSize = importFilesCross( require.context('../files/', true, /\\.json$/) );\r\n                break;\r\n            case 'small':\r\n                listFilesSelectedSize = importFilesCross( require.context('../files/small/', false, /\\.json$/) );\r\n                break;\r\n            case 'medium':\r\n                listFilesSelectedSize = importFilesCross( require.context('../files/medium/', false, /\\.json$/) );\r\n                break;\r\n            case 'big':\r\n                listFilesSelectedSize = importFilesCross( require.context('../files/big/', false, /\\.json$/) );\r\n                break;\r\n            default:\r\n        }\r\n        setAppState({\r\n            selectedSize: e.currentTarget.getAttribute('data-name'),\r\n            selectedCross: null,\r\n            selectedCrossName: null,\r\n            selectedCrossData: null,\r\n            numTop: [],\r\n            numLeft: [],\r\n            crossList: listFilesSelectedSize\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const newthis = this;\r\n        let count = this.state.count;\r\n        // console.log( aaa[0] );\r\n        const list = state.size.map(function(item, i) {\r\n            // console.log(item);\r\n            return (\r\n                <div\r\n                    key={i}\r\n                    data-name={item.systemName}\r\n                    className={\r\n                        state.selectedSize === item.systemName ? 'size__item active' : 'size__item'\r\n                    }\r\n                    onClick={newthis.click}\r\n                >\r\n                    <span className='size__name'>{item.name}</span>\r\n                    <span className='size__count' title='количество'>({count[i]})</span>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className='size'>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        let countCrossAll = importFilesCross( require.context('../files/', true, /\\.json$/) );\r\n        let countCrossSmall = importFilesCross( require.context('../files/small', false, /\\.json$/) );\r\n        let countCrossMedium = importFilesCross( require.context('../files/medium', false, /\\.json$/) );\r\n        let countCrossBig = importFilesCross( require.context('../files/big', false, /\\.json$/) );\r\n        this.setState({\r\n            count: [countCrossAll.length, countCrossSmall.length, countCrossMedium.length, countCrossBig.length]\r\n        });\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\n\r\nfunction importFilesCross(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.click = this.click.bind(this);\r\n        this.state = {\r\n            small: 0,\r\n            medium: 0,\r\n            big: 0\r\n        }\r\n    }\r\n\r\n    click(e){\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const setAppState = context.methods.setAppState;\r\n        const crossType = state.crossList[e.currentTarget.getAttribute('id')].type; // ТИП выбранного кроссворда\r\n        const crossListId = e.currentTarget.getAttribute('id'); // ID выбранного кроссворда из списка\r\n        const crossId = e.currentTarget.getAttribute('data-id-cross'); // ID выбранного кроссворда\r\n\r\n        let arrOld = state.crossList[crossListId];\r\n        let selectedCrossData = arrOld.arr.map((row, index)=> {\r\n            let newNewArr = row.map((value, j) => {\r\n                if ( value === 1 ) {\r\n                    value = 2;\r\n                }\r\n                if ( value === 0 ) {\r\n                    value = 2;\r\n                }\r\n                return value;\r\n            });\r\n            return newNewArr;\r\n        });\r\n        setAppState({\r\n            selectedType: crossType,\r\n            selectedCrossId: crossListId,\r\n            selectedCross: crossId,\r\n            selectedCrossName: state.crossList[e.currentTarget.getAttribute('id')].name\r\n        });\r\n        if ( localStorage.getItem('cross_' + crossType + '_id-' + crossId) ) {\r\n            setAppState({\r\n                selectedCrossData: JSON.parse( localStorage.getItem('cross_' + crossType + '_id-' + crossId) )\r\n            });\r\n        } else {\r\n            setAppState({\r\n                selectedCrossData\r\n            });\r\n        }\r\n        if ( localStorage.getItem('cross_' + crossType + '_id-' + crossId + '_time') ) {\r\n            setAppState({\r\n                selectedCrossTime: JSON.parse( localStorage.getItem('cross_' + crossType + '_id-' + crossId + '_time') )\r\n            });\r\n        }\r\n\r\n        // ВЫВОДИМ В ЛЕВУЮ КОЛОНКУ КОЛИЧЕСТВО ЗАКРАШИВАЕМЫХ КЛЕТОК\r\n        function printNumLeft() {\r\n            let newarrRow = []\r\n            let newarrValues = []\r\n            let a = 0;\r\n            // console.log('строк в массиве = ' + this.state.images['img' + this.state.selected].arr.length);\r\n            state.crossList[crossListId].arr.map((row, i) => {\r\n                // console.group('СТРОКА #' + i);\r\n                // console.log(row);\r\n                row.map((value, j) => {\r\n                    // console.log('цикл #' + j);\r\n                    if ( value !== 0 ) {\r\n                        // console.log(value + ' != 0');\r\n                        a += value;\r\n                        if ( j + 1 === row.length ) {\r\n                            // console.log('значений в массиве = ' + row.length);\r\n                            // console.log( '*** КОНЕЦ МАССИВА ***' );\r\n                            newarrValues.push(a);\r\n                            a = 0;\r\n                            // console.log('записали в новый массив количество единиц = ' + a);\r\n                        }\r\n                    } else {\r\n                        // console.log(value + ' == 0');\r\n                        if ( a !== 0 ) {\r\n                            newarrValues.push(a);\r\n                            a = 0;\r\n                            // console.log('записали в новый массив количество единиц = ' + a);\r\n                        }\r\n                    }\r\n                    return true;\r\n                    // newarrValues = [];\r\n                });\r\n                // console.log(newarrValues);\r\n                newarrRow.push(newarrValues);\r\n                newarrValues = [];\r\n                return true;\r\n                // console.groupEnd();\r\n            });\r\n            // console.log(newarrValues);\r\n            // console.log(newarrRow);\r\n            setAppState({\r\n                numLeft: newarrRow\r\n            });\r\n            // РАБОЧИЙ ПРИМЕР С ОДНОМЕРНЫМ МАССИВОМ\r\n            // let newarr = []\r\n            // let a = 0;\r\n            // console.log('длина массива = ' + arr.length);\r\n            // const my2 = arr.map((value, i) => {\r\n            //     console.log('цикл #' + i);\r\n            //     if ( arr[i] !== 0 ) {\r\n            //         console.log(arr[i] + ' != 0');\r\n            //         a += arr[i];\r\n            //         if ( i + 1 === arr.length ) {\r\n            //             console.log( 'конец массива' );\r\n            //             newarr.push(a);\r\n            //         }\r\n            //     } else {\r\n            //         console.log(arr[i] + ' == 0');\r\n            //         if ( a !== 0 ) {\r\n            //             newarr.push(a);\r\n            //         }\r\n            //         console.log('записали в новый массив количество единиц = ' + a);\r\n            //         a = 0;\r\n            //     }\r\n            // });\r\n            // console.log(newarr);\r\n        }\r\n        printNumLeft();\r\n        // КОНЕЦ\r\n\r\n        // ВЫВОДИМ В ВЕРХНЮЮ КОЛОНКУ КОЛИЧЕСТВО ЗАКРАШИВАЕМЫХ КЛЕТОК\r\n        printNumTop(this);\r\n        function printNumTop() {\r\n            let newArrRow = []\r\n            let newArrValues = []\r\n            let a = 0;\r\n            // let j = 1;\r\n            // console.log('строк в массиве = ' + arr.length);\r\n            let arr = state.crossList[crossListId].arr;\r\n            for (var i = 0; i < arr[0].length; i++) {\r\n                // console.group('************* GROUP *************');\r\n                // console.log( arr );\r\n                for (var key in arr) {\r\n                    // console.group('ЦИКЛ #' + key);\r\n                    if ( arr[key][i] !== 0 ) {\r\n                        // console.log(arr[key][i] + ' != 0');\r\n                        a += arr[key][i];\r\n                        // console.log( key );\r\n                        // console.log( parseInt(key) + 1 );\r\n                        // console.log( arr.length );\r\n                        // console.log('записали в новый массив количество единиц = ' + a);\r\n                        if ( parseInt(key) + 1 === arr.length ) {\r\n                            // console.log('+');\r\n                            newArrValues.push(a);\r\n                            a = 0;\r\n                            // console.log(newArrValues);\r\n                        }\r\n                    } else {\r\n                        // console.log(arr[key][i] + ' == 0');\r\n                        if ( a !== 0 ) {\r\n                            newArrValues.push(a);\r\n                            a = 0;\r\n                            // console.log('записали в новый массив количество единиц = ' + a);\r\n                        }\r\n                    }\r\n                    // console.groupEnd();\r\n                }\r\n                // console.log('записали в новый массив количество единиц = ' + a);\r\n                // a = 0;\r\n                // console.log(newArrValues);\r\n                newArrRow.push(newArrValues);\r\n                newArrValues = [];\r\n                // console.groupEnd();\r\n            }\r\n            // console.log(newArrRow);\r\n            setAppState({\r\n                numTop: newArrRow\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const list = state.crossList.map((item, i) => {\r\n            return (\r\n                <div key={i} id={i} data-id-cross={item.id} data-type-cross={item.type} className='list__item' onClick={this.click}>\r\n                    <div className='list__status'>\r\n                        {\r\n                            JSON.parse(localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_done'))\r\n                            &&\r\n                                <div className='status status_done'></div>\r\n                        }\r\n                        {\r\n                            !JSON.parse(localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_done')) && !localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_progress')\r\n                            &&\r\n                                <div className='status status_not-resolved'></div>\r\n                        }\r\n                        {\r\n                            localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_progress')\r\n                            &&\r\n                                <div className='status status_edit'></div>\r\n                        }\r\n                    </div>\r\n                    {/*\r\n                    <div className='list__img'>\r\n                        {\r\n                            localStorage.getItem('cross_' + state.selectedSize + '_id-' + i + '_done' )\r\n                            &&\r\n                                <img src={process.env.PUBLIC_URL + '/icons-' + state.selectedSize + '/' + i + '.png'} alt='' />\r\n                        }\r\n                    </div>\r\n                    */}\r\n                    <div className='list__info'>\r\n                        <div className='list__name'>\r\n                            {\r\n                                JSON.parse(localStorage.getItem('cross_setting_hide-names')) && !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + i + '_done'))\r\n                                ?\r\n                                item.name.replace(/[\\W\\w]/g, \"*\")\r\n                                :\r\n                                item.name\r\n                            }\r\n                        </div>\r\n                        <div className='list__size'>{item.width}x{item.height}</div>\r\n                    </div>\r\n                    {\r\n                        localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_progress')\r\n                        &&\r\n                            <div\r\n                                class=\"list__progress progress\"\r\n                                style={{width: localStorage.getItem('cross_' + item.type + '_id-' + item.id + '_progress') + '%'}}\r\n                            ></div>\r\n                    }\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='list'>\r\n                {list}\r\n                {\r\n                    this.state[state.selectedSize] === 0\r\n                    &&\r\n                        <div className='list__empty'>Список пуст</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        let countCrossSmall = importFilesCross( require.context('../files/small', false, /\\.json$/) );\r\n        let countCrossMedium = importFilesCross( require.context('../files/medium', false, /\\.json$/) );\r\n        let countCrossBig = importFilesCross( require.context('../files/big', false, /\\.json$/) );\r\n        this.setState({\r\n            small: countCrossSmall.length,\r\n            medium: countCrossMedium.length,\r\n            big: countCrossBig.length\r\n        });\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Panel.css';\r\n\r\nexport default class Panel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.openSettings = this.openSettings.bind(this);\r\n        this.startAgain = this.startAgain.bind(this);\r\n    }\r\n\r\n    openSettings() {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        setAppState({\r\n            modal: true\r\n        });\r\n    }\r\n\r\n    startAgain() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const setAppState = context.methods.setAppState;\r\n        localStorage.removeItem('cross_' + state.selectedType + '_id-' + state.selectedCross);\r\n        localStorage.removeItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done');\r\n        localStorage.removeItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_time');\r\n        localStorage.removeItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_progress');\r\n        state.selectedCrossData.map((row, i) => {\r\n            row.map((value, j) => {\r\n                row[j] = 2;\r\n            });\r\n        });\r\n        setAppState({\r\n            selectedCrossTime: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 0\r\n            },\r\n            selectedCrossChange: false\r\n        });\r\n        clearInterval(state.selectedCrossTimerId);\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const progress = 'cross_' + state.selectedType + '_id-' + state.selectedCross + '_progress';\r\n        if ( !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done')) ) {\r\n            return (\r\n                <div className='panel'>\r\n                    <div className='panel__time'>{String(state.selectedCrossTime.h).padStart(2, \"0\") + ':' + String(state.selectedCrossTime.m).padStart(2, \"0\") + ':' + String(state.selectedCrossTime.s).padStart(2, \"0\")}</div>\r\n                    <div className='panel__progress'>Выполнено: {localStorage.getItem(progress) ? localStorage.getItem(progress) : 0}%</div>\r\n                    <div className='panel__settings' onClick={this.openSettings}>Настройки</div>\r\n                    <div className='panel__start-again' onClick={this.startAgain}>Начать заново</div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NumTop extends Component {\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        const list = state.numTop.map(function(row, i) {\r\n            return (\r\n                <div key={i} className='num__col'>\r\n                    {\r\n                        row.map((value, index) => {\r\n                            return (\r\n                                <div key={index} className='num__value'>\r\n                                    {value}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='num num_top'>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        // ОТОБРАЖЕНИЕ НАПРАВЛЯЮЩИХ ЛИНИЙ\r\n        function numGuideLinesMouseEnter(numCol, colId) {\r\n            numCol.classList.add('hover');\r\n            document.querySelectorAll('.cross__row').forEach((row, i) => {\r\n                row.querySelectorAll('.cross__cell')[colId].classList.add('hover');\r\n            });\r\n        }\r\n        function numGuideLinesMouseLeave(numCol, colId) {\r\n            numCol.classList.remove('hover');\r\n            document.querySelectorAll('.cross__row').forEach((row, i) => {\r\n                row.querySelectorAll('.cross__cell')[colId].classList.remove('hover');\r\n            });\r\n        }\r\n        if ( !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done')) ) {\r\n            document.querySelectorAll('.num_top .num__col').forEach((col, i) => {\r\n                col.addEventListener('mouseenter', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        numGuideLinesMouseEnter(col, i);\r\n                    }\r\n                });\r\n                col.addEventListener('mouseleave', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        numGuideLinesMouseLeave(col, i);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NumLeft extends Component {\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        const list = state.numLeft.map(function(row, i) {\r\n            return (\r\n                <div key={i} className='num__row'>\r\n                    {\r\n                        row.map((value, index) => {\r\n                            return (\r\n                                <div key={index} className='num__value'>\r\n                                    {value}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='num num_left'>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        // ОТОБРАЖЕНИЕ НАПРАВЛЯЮЩИХ ЛИНИЙ\r\n        function numGuideLinesMouseEnter(numRow, rowId) {\r\n            numRow.classList.add('hover');\r\n            document.querySelectorAll('.cross__row')[rowId].querySelectorAll('.cross__cell').forEach((col, i) => {\r\n                col.classList.add('hover');\r\n            });\r\n        }\r\n        function numGuideLinesMouseLeave(numRow, rowId) {\r\n            numRow.classList.remove('hover');\r\n            document.querySelectorAll('.cross__row').forEach((row, i) => {\r\n                row.querySelectorAll('.cross__cell').forEach((col, i) => {\r\n                    col.classList.remove('hover');\r\n                });\r\n            });\r\n        }\r\n        if ( !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done')) ) {\r\n            document.querySelectorAll('.num_left .num__row').forEach((row, i) => {\r\n                row.addEventListener('mouseenter', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        numGuideLinesMouseEnter(row, i);\r\n                    }\r\n                });\r\n                row.addEventListener('mouseleave', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        numGuideLinesMouseLeave(row, i);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Cross.css';\r\n\r\n// let timer = 0;\r\n// let sec = 0;\r\n// timer = setInterval(function(){\r\n//     sec++;\r\n//     console.log(sec);\r\n// }, 1000);\r\n// clearInterval(timer)\r\n\r\n// КОНВЕРТИРОВАТЬ СЕКУНДЫ В HH-MM-SS\r\n// ВАРИАНТ 1\r\n// var date = new Date(null);\r\n// date.setSeconds(sec); // specify value for SECONDS here\r\n// var result = date.toISOString().substr(11, 8);\r\n// console.log( result );\r\n// ВАРИАНТ 2\r\n// console.log( new Date(sec * 1000).toISOString().substr(11, 8) );\r\n// ВАРИАНТ 3\r\n// let totalSeconds = 28565;\r\n// let hours = Math.floor(totalSeconds / 3600);\r\n// totalSeconds %= 3600;\r\n// let minutes = Math.floor(totalSeconds / 60);\r\n// let seconds = totalSeconds % 60;\r\n// console.log(\"hours: \" + hours);\r\n// console.log(\"minutes: \" + minutes);\r\n// console.log(\"seconds: \" + seconds);\r\n// // If you want strings with leading zeroes:\r\n// minutes = String(minutes).padStart(2, \"0\");\r\n// hours = String(hours).padStart(2, \"0\");\r\n// seconds = String(seconds).padStart(2, \"0\");\r\n// console.log(hours + \":\" + minutes + \":\" + seconds);\r\n\r\nlet timer = 0;\r\nlet totalCrossSeconds = 0;\r\n\r\nexport default class Cross extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickCell = this.clickCell.bind(this);\r\n        this.clickSave = this.clickSave.bind(this);\r\n        this.clickStartTimer = this.clickStartTimer.bind(this);\r\n    }\r\n\r\n    clickStartTimer() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const setAppState = context.methods.setAppState;\r\n        timer = setInterval(function(){\r\n            totalCrossSeconds++;\r\n            // console.log(totalCrossSeconds);\r\n            let newSeconds = Math.floor( (state.selectedCrossTime.h * 60 * 60) + (state.selectedCrossTime.m * 60) + state.selectedCrossTime.s );\r\n            // console.log( newSeconds );\r\n            newSeconds += totalCrossSeconds;\r\n            // console.log( newSeconds );\r\n            //======================\r\n            let hours = Math.floor(newSeconds / 3600);\r\n                newSeconds %= 3600;\r\n            let minutes = Math.floor(newSeconds / 60);\r\n            let seconds = newSeconds % 60;\r\n            // console.log(\"hours: \" + hours);\r\n            // console.log(\"minutes: \" + minutes);\r\n            // console.log(\"seconds: \" + seconds);\r\n            // If you want strings with leading zeroes:\r\n            // hours = String(hours).padStart(2, \"0\");\r\n            // minutes = String(minutes).padStart(2, \"0\");\r\n            // seconds = String(seconds).padStart(2, \"0\");\r\n            // console.log(hours + \":\" + minutes + \":\" + seconds);\r\n            //======================\r\n            setAppState({\r\n                selectedCrossTime: {\r\n                    h: hours,\r\n                    m: minutes,\r\n                    s: seconds\r\n                },\r\n                selectedCrossTimerId: timer\r\n            });\r\n        }, 1000);\r\n        totalCrossSeconds = 0;\r\n    }\r\n\r\n\r\n    clickSave() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n        localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n        // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n        // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n    }\r\n\r\n    clickCell(e) {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        const setAppState = context.methods.setAppState;\r\n\r\n        if ( !localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done' ) ) {\r\n\r\n            // ЕСЛИ ВЫБРАНО: ЗАКРАСИТЬ КЛЕТКУ\r\n            if ( state.btnDraw ) {\r\n                e.currentTarget.classList.add('paint');\r\n                e.currentTarget.classList.remove('blank');\r\n                e.currentTarget.setAttribute('data-type', 1);\r\n                if ( state.selectedCrossChange === false ) {\r\n                    this.clickStartTimer();\r\n                    setAppState({\r\n                        selectedCrossChange: true\r\n                    })\r\n                }\r\n            }\r\n            // END\r\n\r\n            // ЕСЛИ ВЫБРАНО: ПОМЕТИТЬ КЛЕТКУ КАК ПУСТУЮ\r\n            if ( state.btnEmpty ) {\r\n                e.currentTarget.classList.add('blank');\r\n                e.currentTarget.classList.remove('paint');\r\n                e.currentTarget.setAttribute('data-type', 0);\r\n                if ( state.selectedCrossChange === false ) {\r\n                    this.clickStartTimer();\r\n                    setAppState({\r\n                        selectedCrossChange: true\r\n                    })\r\n                }\r\n            }\r\n            // END\r\n\r\n            // ЕСЛИ ВЫБРАНО: ОЧИСТИТЬ КЛЕТКУ\r\n            if ( state.btnClean ) {\r\n                e.currentTarget.classList.remove('paint');\r\n                e.currentTarget.classList.remove('blank');\r\n                e.currentTarget.removeAttribute('data-type');\r\n                if ( state.selectedCrossChange === false ) {\r\n                    this.clickStartTimer();\r\n                    setAppState({\r\n                        selectedCrossChange: true\r\n                    })\r\n                }\r\n            }\r\n            // END\r\n\r\n            let selectedCrossDataNew = [];\r\n\r\n            // ЕСЛИ ВЫБРАНО ТРОЙНОЕ ДЕЙСТВИЕ: ЗАКРАСИТЬ, ПОМЕТИТЬ, УДАЛИТЬ\r\n            // ВАРИАНТ 1\r\n            if ( JSON.parse(localStorage.getItem('cross_setting_quick-draw')) ) {\r\n                if ( state.selectedCrossChange === false ) {\r\n                    this.clickStartTimer();\r\n                    setAppState({\r\n                        selectedCrossChange: true\r\n                    })\r\n                }\r\n                selectedCrossDataNew = state.selectedCrossData;\r\n                let rowIndexCross = e.currentTarget.parentNode.parentNode.getAttribute('data-index');\r\n                let colIndexCross = e.currentTarget.getAttribute('data-index');\r\n                switch (selectedCrossDataNew[rowIndexCross][colIndexCross]) {\r\n                    case 1:\r\n                        selectedCrossDataNew[rowIndexCross][colIndexCross] = 0;\r\n                        break;\r\n                    case 0:\r\n                        selectedCrossDataNew[rowIndexCross][colIndexCross] = 2;\r\n                        break;\r\n                    case 2:\r\n                        selectedCrossDataNew[rowIndexCross][colIndexCross] = 1;\r\n                        break;\r\n                    default:\r\n                }\r\n                setAppState({\r\n                    selectedCrossData: selectedCrossDataNew\r\n                });\r\n                // console.log( selectedCrossDataNew );\r\n            }\r\n\r\n            /*\r\n            // ВАРИАНТ 2\r\n            if ( JSON.parse(localStorage.getItem('cross_setting_quick-draw')) ) {\r\n                if ( state.selectedCrossChange === false ) {\r\n                    this.clickStartTimer();\r\n                    setAppState({\r\n                        selectedCrossChange: true\r\n                    })\r\n                }\r\n                let rowIndexCross = e.currentTarget.parentNode.parentNode.getAttribute('data-index');\r\n                let colIndexCross = e.currentTarget.getAttribute('data-index');\r\n                switch (state.selectedCrossData[rowIndexCross][colIndexCross]) {\r\n                    case 1:\r\n                        setAppState((item, i) => {\r\n                            item.selectedCrossData[rowIndexCross][colIndexCross] = 0;\r\n                            return (\r\n                                item\r\n                            )\r\n                        });\r\n                        break;\r\n                    case 0:\r\n                        setAppState((item, i) => {\r\n                            item.selectedCrossData[rowIndexCross][colIndexCross] = 2;\r\n                            return (\r\n                                item\r\n                            )\r\n                        });\r\n                        break;\r\n                    case 2:\r\n                        setAppState((item, i) => {\r\n                            item.selectedCrossData[rowIndexCross][colIndexCross] = 1;\r\n                            return (\r\n                                item\r\n                            )\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n            }\r\n            */\r\n            // END\r\n\r\n\r\n            // ЕСЛИ ВЫБРАНО НЕ ТРОЙНОЕ ДЕЙСТВИЕ, А ПООТДЕЛЬНОСТИ\r\n            if ( !JSON.parse(localStorage.getItem('cross_setting_quick-draw')) ) {\r\n                selectedCrossDataNew = state.selectedCrossData;\r\n                if ( state.btnDraw ) {\r\n                    let row = e.currentTarget.parentNode.parentNode.getAttribute('data-index');\r\n                    let col = e.currentTarget.getAttribute('data-index');\r\n                    selectedCrossDataNew[row][col] = 1;\r\n                }\r\n                if ( state.btnEmpty ) {\r\n                    let row = e.currentTarget.parentNode.parentNode.getAttribute('data-index');\r\n                    let col = e.currentTarget.getAttribute('data-index');\r\n                    selectedCrossDataNew[row][col] = 0;\r\n                }\r\n                if ( state.btnClean ) {\r\n                    let row = e.currentTarget.parentNode.parentNode.getAttribute('data-index');\r\n                    let col = e.currentTarget.getAttribute('data-index');\r\n                    selectedCrossDataNew[row][col] = 2;\r\n                }\r\n                setAppState({\r\n                    selectedCrossData: selectedCrossDataNew\r\n                });\r\n            }\r\n            // END\r\n\r\n            // Array.prototype.equals = function (other, callback = (x, y) => (x === y)) {\r\n            //   // Check the other object is of the same type\r\n            //   if (Object.getPrototypeOf(this) !== Object.getPrototypeOf(other)) {\r\n            //     return false;\r\n            //   }\r\n            //   if (this.length === undefined || this.length !== other.length) {\r\n            //     return false;\r\n            //   }\r\n            //   return Array.prototype.every.call(this, (x, i) => callback(x, other[i]));\r\n            // };\r\n            /*\r\n            */\r\n            // Warn if overriding existing method\r\n            // if (Array.prototype.equals) {\r\n            //     console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\r\n            // }\r\n            // attach the .equals method to Array's prototype to call it on any array\r\n            Array.prototype.equals = function (array) {\r\n                // if the other array is a falsy value, return\r\n                if (!array)\r\n                return false;\r\n                // compare lengths - can save a lot of time\r\n                if (this.length !== array.length)\r\n                return false;\r\n                for (var i = 0, l=this.length; i < l; i++) {\r\n                    // Check if we have nested arrays\r\n                    if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                        // recurse into the nested arrays\r\n                        if (!this[i].equals(array[i]))\r\n                        return false;\r\n                    }\r\n                    else if (this[i] !== array[i]) {\r\n                        // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            // Hide method from for-in loops\r\n            Object.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n\r\n            // *********************************************************************\r\n            // let selectedCrossDataNewForCheck = state.selectedCrossData;\r\n            let selectedCrossDataNewForCheck = selectedCrossDataNew;\r\n            let tempMiniArr = [];\r\n            let countTrue = 0;\r\n            let progress = 0;\r\n            // console.log( selectedCrossDataNewForCheck );\r\n            selectedCrossDataNewForCheck.map((rowNew, i) => {\r\n                // console.group('rowNew-'+i);\r\n                // console.log('строка: ' + rowNew);\r\n                rowNew.map((value, j) => {\r\n                    if ( value === 2 ) {\r\n                        // console.log('ОПА ДВОЙКА');\r\n                        tempMiniArr.push(0);\r\n                        // console.log(tempMiniArr);\r\n                    } else {\r\n                        tempMiniArr.push(value);\r\n                        // console.log(tempMiniArr);\r\n                    }\r\n                    return tempMiniArr;\r\n                });\r\n                // console.log('строка новая: ' + tempMiniArr);\r\n                // console.log( tempMiniArr.equals(state.crossList[state.selectedCrossId].arr[i]) );\r\n                if ( tempMiniArr.equals(state.crossList[state.selectedCrossId].arr[i]) ) {\r\n                    countTrue++;\r\n                    progress += 100 / state.crossList[state.selectedCrossId].height;\r\n                }\r\n                tempMiniArr = [];\r\n                // console.groupEnd();\r\n            });\r\n            localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_progress', progress );\r\n            if ( state.crossList[state.selectedCrossId].height === countTrue ) {\r\n                setAppState({\r\n                    result: true\r\n                });\r\n                this.clickSave();\r\n                localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done', true );\r\n                document.querySelector('.grid__result').classList.add('active')\r\n                clearInterval(state.selectedCrossTimerId);\r\n                setTimeout(function() {\r\n                    document.querySelector('.grid__result.active').classList.remove('active')\r\n                }, 2000);\r\n            }\r\n            // console.log(countTrue);\r\n            countTrue = 0;\r\n            // *********************************************************************\r\n\r\n            /*\r\n            // ПРОВЕРКА РЕШЕННОСТИ\r\n            let arrCellTrue = 0;\r\n            let arrCellFalse = 0;\r\n            state.crossList[state.selectedCross].arr.map((row, i) => {\r\n                row.map((value, j) => {\r\n                    if ( value === 1 ) {\r\n                        arrCellTrue++;\r\n                    }\r\n                    if ( value === 0 ) {\r\n                        arrCellFalse++;\r\n                    }\r\n                    return true;\r\n                });\r\n                return true;\r\n            });\r\n            console.log( 'true=' + arrCellTrue + ' | false=' + arrCellFalse );\r\n\r\n            let myArrCellTrue = 0;\r\n            let myArrCellFalse = 0;\r\n            state.selectedCrossData.map((row, i) => {\r\n                row.map((value, j) => {\r\n                    // if ( value === state.crossList[state.selectedCross].arr[i][j] ) {\r\n                        if ( value === 1 ) {\r\n                            myArrCellTrue++;\r\n                            console.log( '[' + i + ',' + j + '] ' + value + ' ' + state.crossList[state.selectedCross].arr[i][j] + ' совпадает' );\r\n                        }\r\n                        if ( value === 0 || value === 2 ) {\r\n                            myArrCellFalse++;\r\n                            console.log( '[' + i + ',' + j + '] ' + value + ' ' + state.crossList[state.selectedCross].arr[i][j] + ' ПУСТАЯ КЛЕТКА' );\r\n                            document.querySelector('h1').innerText = '-';\r\n                        }\r\n                        return true;\r\n                    // }\r\n                });\r\n                return true;\r\n            });\r\n            console.log( 'true=' + myArrCellTrue + ' | false=' + myArrCellFalse );\r\n\r\n            if ( myArrCellTrue===arrCellTrue && myArrCellFalse===arrCellFalse ) {\r\n                document.querySelector('h1').innerText = '+';\r\n                // setAppState({\r\n                //     result: true\r\n                // });\r\n                // this.clickSave();\r\n                // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross + '_done', true );\r\n                document.querySelector('.grid__result').classList.add('active')\r\n                setTimeout(\r\n                    function() {\r\n                        document.querySelector('.grid__result').classList.remove('active')\r\n                    }, 2000\r\n                );\r\n            }\r\n            // END\r\n            */\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        let crossList = state.selectedCrossData.map(function(row, i) {\r\n            return (\r\n                <div className='cross__row' key={i} data-index={i}>\r\n                    <div className='cross__row-inner'>\r\n                        {\r\n                            row.map(function(cell, j) {\r\n                                return (\r\n                                    <div\r\n                                        onClick={this.clickCell}\r\n                                        className={\r\n                                            (cell === 1 && 'cross__cell paint') ||\r\n                                            (cell === 0 && 'cross__cell blank') ||\r\n                                            (cell === 2 && 'cross__cell')\r\n                                        }\r\n                                        data-type={\r\n                                            (cell === 1 && '1') ||\r\n                                            (cell === 0 && '0') ||\r\n                                            (cell === 2 && '2')\r\n                                        }\r\n                                        data-index={j}\r\n                                        key={j}\r\n                                    >\r\n                                    </div>\r\n                                );\r\n                            }, this)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }, this)\r\n\r\n        return (\r\n            <div className={'cross' + (localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done') ? ' cross_done':'')}>\r\n                {crossList}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        // ОТОБРАЖЕНИЕ НАПРАВЛЯЮЩИХ ЛИНИЙ\r\n        function guideLinesMouseEnter(cell) {\r\n            // console.log(\"MOUSEENTER\");\r\n            let rowId = cell.parentNode.parentNode.getAttribute('data-index');\r\n            let colId = cell.getAttribute('data-index');\r\n            document.querySelectorAll('.num_top .num__col').forEach((num, i)=>{\r\n                num.classList.remove('hover');\r\n            });\r\n            document.querySelectorAll('.num_left .num__row').forEach((num, i)=>{\r\n                num.classList.remove('hover');\r\n            });\r\n            document.querySelectorAll('.cross__row')[rowId].querySelectorAll('.cross__cell').forEach(colItem=>{\r\n                colItem.classList.add('hover');\r\n                document.querySelectorAll('.num_left .num__row')[rowId].classList.add('hover');\r\n                document.querySelectorAll('.num_top .num__col')[colId].classList.add('hover');\r\n            });\r\n            document.querySelectorAll('.cross__row').forEach((row, i)=>{\r\n                row.querySelectorAll('.cross__cell')[parseInt(colId)].classList.add('hover');\r\n            });\r\n        }\r\n        function guideLinesMouseLeave(cell) {\r\n            // console.log(\"MOUSELEAVE\");\r\n            let rowId = cell.parentNode.parentNode.getAttribute('data-index');\r\n            let colId = cell.getAttribute('data-index');\r\n            document.querySelectorAll('.cross__row')[rowId].querySelectorAll('.cross__cell').forEach(colItem=>{\r\n                colItem.classList.remove('hover');\r\n            });\r\n            document.querySelectorAll('.cross__row').forEach((row, i)=>{\r\n                row.querySelectorAll('.cross__cell')[parseInt(colId)].classList.remove('hover');\r\n            });\r\n            document.querySelectorAll('.num_top .num__col').forEach((num, i)=>{\r\n                num.classList.remove('hover');\r\n            });\r\n            document.querySelectorAll('.num_left .num__row').forEach((num, i)=>{\r\n                num.classList.remove('hover');\r\n            });\r\n        }\r\n        if ( !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done')) ) {\r\n            document.querySelectorAll('.cross__cell').forEach(cell=>{\r\n                cell.addEventListener('mouseenter', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        guideLinesMouseEnter(cell);\r\n                    }\r\n                });\r\n                cell.addEventListener('mouseleave', () => {\r\n                    if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n                        guideLinesMouseLeave(cell);\r\n                    }\r\n                });\r\n            })\r\n        }\r\n        // КОНЕЦ\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        if ( state.selectedCrossChange ) {\r\n            clearInterval(timer);\r\n            localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n            localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n            // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n            // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport NumTop from '../Num/NumTop';\r\nimport NumLeft from '../Num/NumLeft';\r\nimport Cross from '../Cross/Cross';\r\nimport './Grid.css';\r\nimport '../Num/Num.css';\r\n\r\nexport default class Grid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.clickDrawQuick = this.clickDrawQuick.bind(this);\r\n        this.clickDraw = this.clickDraw.bind(this);\r\n        this.clickEmpty = this.clickEmpty.bind(this);\r\n        this.clickClean = this.clickClean.bind(this);\r\n        this.clickSave = this.clickSave.bind(this);\r\n    }\r\n\r\n    // clickDrawQuick(e) {\r\n    //     const {context} = this.props;\r\n    //     const setAppState = context.methods.setAppState;\r\n    //     setAppState({\r\n    //         // btnDrawQuick: true,\r\n    //         btnDraw: false,\r\n    //         btnEmpty: false,\r\n    //         btnClean: false,\r\n    //     });\r\n    // }\r\n    clickDraw(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        setAppState({\r\n            // btnDrawQuick: false,\r\n            btnDraw: true,\r\n            btnEmpty: false,\r\n            btnClean: false,\r\n        });\r\n    }\r\n\r\n    clickEmpty(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        setAppState({\r\n            // btnDrawQuick: false,\r\n            btnDraw: false,\r\n            btnEmpty: true,\r\n            btnClean: false,\r\n        });\r\n    }\r\n\r\n    clickClean(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        setAppState({\r\n            // btnDrawQuick: false,\r\n            btnDraw: false,\r\n            btnEmpty: false,\r\n            btnClean: true,\r\n        });\r\n    }\r\n\r\n    clickSave() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n        localStorage.setItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n        // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross, JSON.stringify( state.selectedCrossData ) );\r\n        // localStorage.setItem('cross_' + state.selectedSize + '_id-' + state.selectedCross + '_time', JSON.stringify( state.selectedCrossTime ) );\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n\r\n        return (\r\n            <div className=\"grid\">\r\n                {\r\n                    !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done' ))\r\n                    &&\r\n                        <div className='grid__num-top'>\r\n                            <NumTop context={context} />\r\n                        </div>\r\n                }\r\n                {\r\n                    !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done' ))\r\n                    &&\r\n                        <div className='grid__num-left'>\r\n                            <NumLeft context={context} />\r\n                        </div>\r\n                }\r\n                <div className='grid__content'>\r\n                    <Cross context={context} />\r\n                    <div className='grid__result'>\r\n                        {\r\n                            state.result\r\n                            ?\r\n                            'Отлично'\r\n                            :\r\n                            'Не верно'\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='grid__btns-control'>\r\n                    {\r\n                        !JSON.parse(localStorage.getItem('cross_' + state.selectedType + '_id-' + state.selectedCross + '_done' ))\r\n                        &&\r\n                            <div className='btns'>\r\n                                <button className='btn btn_save' title='Сохранить изменения' onClick={this.clickSave}>Сохранить изменения</button>\r\n                                {\r\n                                    JSON.parse(localStorage.getItem('cross_setting_quick-draw'))\r\n                                    &&\r\n                                        <button className='btn btn_draw-quick active' title='Закрасить, пометить, удалить' onClick={this.clickDrawQuick}>Быстрое рисование</button>\r\n                                }\r\n                                {\r\n                                    !JSON.parse(localStorage.getItem('cross_setting_quick-draw'))\r\n                                    &&\r\n                                        <div>\r\n                                            <button className={'btn btn_draw' + (state.btnDraw?' active':'')} title='Закрасить клетку' onClick={this.clickDraw}>Закрасить клетку</button>\r\n                                            <button className={'btn btn_empty' + (state.btnEmpty?' active':'')} title='Пометить клетку как пустую' onClick={this.clickEmpty}>Пометить клетку как пустую</button>\r\n                                            <button className={'btn btn_clean' + (state.btnClean?' active':'')} title='Очистить клетку' onClick={this.clickClean}>Очистить клетку</button>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Settings.css';\r\nimport '../Modal/Modal.css';\r\n\r\nexport default class Settings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickClose = this.clickClose.bind(this);\r\n        this.clickGuideLines = this.clickGuideLines.bind(this);\r\n        this.clickHideNames = this.clickHideNames.bind(this);\r\n        // this.clickMarkerEmptyCells = this.clickMarkerEmptyCells.bind(this);\r\n        this.clickQuickDraw = this.clickQuickDraw.bind(this);\r\n\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        if ( localStorage.getItem('cross_setting_guide-lines') === null ) {\r\n            localStorage.setItem('cross_setting_guide-lines', state.settingGuideLines );\r\n        }\r\n        if ( localStorage.getItem('cross_setting_quick-draw') === null ) {\r\n            localStorage.setItem('cross_setting_quick-draw', state.settingQuickDraw );\r\n        }\r\n        if ( localStorage.getItem('cross_setting_hide-names') === null ) {\r\n            localStorage.setItem('cross_setting_hide-names', state.settingHideNames );\r\n        }\r\n    }\r\n\r\n    clickClose(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        setAppState({\r\n            modal: false\r\n        });\r\n        this.refs.modal.classList.remove('active');\r\n    }\r\n\r\n    clickGuideLines(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        localStorage.setItem('cross_setting_guide-lines', e.currentTarget.checked );\r\n        setAppState({\r\n            settingGuideLines: e.currentTarget.checked\r\n        });\r\n\r\n        // НАПРАВЛЯЮЩИЕ ЛИНИИ\r\n        function guideLinesMouseLeave() {\r\n            document.querySelectorAll('.cross__cell').forEach(item=>{\r\n                let rowId = item.parentNode.parentNode.getAttribute('data-index');\r\n                let colId = item.getAttribute('data-index');\r\n                document.querySelectorAll('.cross__row')[rowId].querySelectorAll('.cross__cell').forEach(colItem=>{\r\n                    colItem.classList.remove('hover');\r\n                });\r\n                document.querySelectorAll('.cross__row').forEach((row, i)=>{\r\n                    row.querySelectorAll('.cross__cell')[parseInt(colId)].classList.remove('hover');\r\n                });\r\n            });\r\n        }\r\n\r\n        if ( JSON.parse(localStorage.getItem('cross_setting_guide-lines')) ) {\r\n            // console.log( 'ВКЛЮЧИЛИ НАПРАВЛЯЮЩИЕ' );\r\n            guideLinesMouseLeave();\r\n        } else {\r\n            // console.log( 'ОТКЛЮЧИЛИ НАПРАВЛЯЮЩИЕ' );\r\n            guideLinesMouseLeave();\r\n        }\r\n\r\n    }\r\n\r\n    clickHideNames(e) {\r\n        const {context} = this.props;\r\n        // const state = context.state;\r\n        const setAppState = context.methods.setAppState;\r\n        localStorage.setItem('cross_setting_hide-names', e.currentTarget.checked );\r\n        setAppState({\r\n            settingHideNames: e.currentTarget.checked\r\n        });\r\n    }\r\n\r\n    // clickMarkerEmptyCells(e) {\r\n    //     const {context} = this.props;\r\n    //     const state = context.state;\r\n    //     const setAppState = context.methods.setAppState;\r\n    //     setAppState({\r\n    //         settingMarkerEmptyCells: !state.settingMarkerEmptyCells\r\n    //     });\r\n    // }\r\n\r\n    clickQuickDraw(e) {\r\n        const {context} = this.props;\r\n        const setAppState = context.methods.setAppState;\r\n        localStorage.setItem('cross_setting_quick-draw', e.currentTarget.checked );\r\n        setAppState({\r\n            settingQuickDraw: e.currentTarget.checked\r\n        });\r\n        if ( JSON.parse(localStorage.getItem('cross_setting_quick-draw')) ) {\r\n            setAppState({\r\n                btnDrawQuick: true,\r\n                btnDraw: false,\r\n                btnEmpty: false,\r\n                btnClean: false\r\n            });\r\n        } else {\r\n            setAppState({\r\n                btnDrawQuick: false,\r\n                btnDraw: false,\r\n                btnEmpty: false,\r\n                btnClean: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {context} = this.props;\r\n        const state = context.state;\r\n        return (\r\n            <div className={\"modal\" + (state.modal ? ' active':'')} ref='modal'>\r\n                <div className=\"modal__overlay\" onClick={this.clickClose}></div>\r\n                <div className=\"modal__inner\">\r\n                    <div className=\"modal__close\" onClick={this.clickClose}>Закрыть</div>\r\n                    <div className=\"modal__hd\">\r\n                        <div className=\"modal__title\">Настройки</div>\r\n                    </div>\r\n                    <div className=\"modal__content\">\r\n\r\n                        <div className=\"settings\">\r\n                            <div className=\"settings__item settings__guide-lines\">\r\n                                <label className='settings__label' htmlFor='guide-lines'>\r\n                                    <input\r\n                                        id='guide-lines'\r\n                                        type='checkbox'\r\n                                        onChange={this.clickGuideLines}\r\n                                        defaultChecked={JSON.parse(localStorage.getItem('cross_setting_guide-lines'))}\r\n                                        name=''\r\n                                    />\r\n                                    Показывать направляющие линии\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"settings__item settings__hide-names\">\r\n                                <label className='settings__label' htmlFor='hide-names'>\r\n                                    <input\r\n                                        id='hide-names'\r\n                                        type='checkbox'\r\n                                        onChange={this.clickHideNames}\r\n                                        defaultChecked={JSON.parse(localStorage.getItem('cross_setting_hide-names'))}\r\n                                        name=''\r\n                                    />\r\n                                    Скрыть названия\r\n                                </label>\r\n                            </div>\r\n                            {/*\r\n                                <div className=\"settings__item settings__marker-empty-cells\">\r\n                                <label className='settings__label' htmlFor='marker-empty-cells'>\r\n                                    <input\r\n                                        id='marker-empty-cells'\r\n                                        type='checkbox'\r\n                                        onChange={this.clickMarkerEmptyCells}\r\n                                        defaultChecked={state.settingMarkerEmptyCells}\r\n                                        name=''\r\n                                    />\r\n                                    Символ-маркер пустой ячейки\r\n                                </label>\r\n                            </div>\r\n                            */}\r\n                            <div className=\"settings__item settings__quick-draw\">\r\n                                <label className='settings__label' htmlFor='quick-draw'>\r\n                                    <input\r\n                                        id='quick-draw'\r\n                                        type='checkbox'\r\n                                        onChange={this.clickQuickDraw}\r\n                                        defaultChecked={JSON.parse(localStorage.getItem('cross_setting_quick-draw'))}\r\n                                        name=''\r\n                                    />\r\n                                    Разрешить быстрое рисование в ячейке\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    componentWillUnmount() {}\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Size from './Size/Size';\r\nimport List from './List/List';\r\nimport Panel from './Panel/Panel';\r\nimport Grid from './Grid/Grid';\r\nimport Settings from './Settings/Settings';\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction importFilesCross(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nlet initialState = {\r\n    settingGuideLines: true,\r\n    settingHideNames: true,\r\n    settingQuickDraw: true,\r\n    btnDraw: false,\r\n    btnEmpty: false,\r\n    btnClean: false,\r\n    selectedSize: 'all',\r\n    selectedType: null,\r\n    selectedCross: null,\r\n    selectedCrossId: null,\r\n    selectedCrossName: null,\r\n    selectedCrossChange: false,\r\n    selectedCrossTime: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n    },\r\n    selectedCrossTimerId: null,\r\n    selectedCrossData: null,\r\n    modal: false,\r\n    result: false,\r\n    numTop: [],\r\n    numLeft: [],\r\n    size: [\r\n        {\r\n            systemName: 'all',\r\n            name: 'Все'\r\n        },\r\n        {\r\n            systemName: 'small',\r\n            name: 'Маленькие'\r\n        },\r\n        {\r\n            systemName: 'medium',\r\n            name: 'Средние'\r\n        },\r\n        {\r\n            systemName: 'big',\r\n            name: 'Большие'\r\n        }\r\n    ],\r\n    crossList: []\r\n}\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...initialState\r\n        }\r\n        this.setAppState = this.setAppState.bind(this);\r\n        this.returnBackList = this.returnBackList.bind(this);\r\n    }\r\n    returnBackList() {\r\n        this.setState({\r\n            selectedCross: null,\r\n            selectedType: null,\r\n            selectedCrossName: null,\r\n            selectedCrossChange: false,\r\n            selectedCrossData: null,\r\n            selectedCrossTime: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 0\r\n            },\r\n            numTop: [],\r\n            numLeft: [],\r\n            btnDraw: false,\r\n            btnEmpty: false,\r\n            btnClean: false\r\n        })\r\n    }\r\n\r\n    setAppState(newState) {\r\n      this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={{ state: this.state, methods: {setAppState: (value) => this.setState(value)}}}>\r\n            <Context.Consumer>{context => (\r\n\r\n                <div className=\"app\">\r\n                    <h1 className='app__title'>Японские кроссворды</h1>\r\n                    {\r\n                        this.state.selectedCross !== null\r\n                        &&\r\n                            <div className='return-back-list' onClick={this.returnBackList}>Вернуться к списку</div>\r\n                    }\r\n                    {\r\n                        JSON.parse(localStorage.getItem('cross_' + this.state.selectedType + '_id-' + this.state.selectedCross + '_done'))\r\n                        &&\r\n                            <div className='message'>\r\n                                <b>Поздравляем!</b><br/>\r\n                                Вы выполнили \"{this.state.selectedCrossName}\" за {String(this.state.selectedCrossTime.h).padStart(2, \"0\") + ':' + String(this.state.selectedCrossTime.m).padStart(2, \"0\") + ':' + String(this.state.selectedCrossTime.s).padStart(2, \"0\")}\r\n                            </div>\r\n                    }\r\n                    {\r\n                        this.state.selectedCross !== null\r\n                        &&\r\n                            <Panel context={context} />\r\n                    }\r\n                    {\r\n                        this.state.selectedCross === null\r\n                        &&\r\n                            <div>\r\n                                <Size context={context} />\r\n                                <List context={context} />\r\n                            </div>\r\n                    }\r\n                    {\r\n                        this.state.selectedCrossData !== null\r\n                        &&\r\n                        <Grid context={context} />\r\n                    }\r\n                    <Settings context={context} />\r\n\r\n                    {\r\n                        // <pre>\r\n                        // {JSON.stringify(this.state, \"\", 4)}\r\n                        // </pre>\r\n                    }\r\n                </div>\r\n\r\n            )}</Context.Consumer>\r\n            </Context.Provider>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...initialState,\r\n            crossList: importFilesCross( require.context('./files/', true, /\\.json$/) )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}